
-------------------------------- PRINCE GARG - PLENA FINANCE SOPHISTICATED ARCHITECTURE ----------------------------------------------------------------------
/src
├── /decorators
│   ├── authorized.decorator.ts       # Custom decorator for marking authorized endpoints.
│   ├── current.user.decorator.ts     # Custom decorator for accessing current user information.
├── /guard
│   ├── auth.guard.ts                 # Guard for authentication and authorization.
├── /modules
│   ├── app.controller.ts            # Main controller handling root application endpoints.
│   ├── app.module.ts                # Root module defining the core application structure.
│   ├── app.service.ts               # Main service containing core business logic.
│   ├── /common
│   │   ├── /constant                # Folder for storing constant values used throughout the application.
│   │   ├── /interceptors            # Folder for interceptors that modify the behavior of HTTP requests or responses globally.
│   │   ├── /model                   # Folder for defining application-wide models and configurations.
│   │   │   ├── config.ts            # Centralized configuration settings.
│   │   ├── /provider                # Folder for providers used in dependency injection.
│   │   │   ├── config.provider.ts  # Provider for configuration settings.
│   │   ├── common.module.ts         # Module for common utilities and configurations shared across modules.
│   ├── /auth
│   │   ├── auth.module.ts           # Module handling authentication and authorization.
│   │   ├── auth.controller.ts       # Controller handling authentication endpoints.
│   │   ├── auth.service.ts          # Service managing authentication logic.
│   │   ├── jwt.strategy.ts          # JWT strategy for Passport.js authentication.
│   │   ├── http.bearer.ts           # HTTP Bearer token handling.
│   │   ├── /dto                     # Folder for DTOs (Data Transfer Objects).
│   │   │   ├── login-request.dto.ts # DTO for handling login request data validation.
│   ├── /users
│       ├── users.module.ts          # Module managing user-related operations.
│       ├── users.controller.ts      # Controller handling user-related endpoints.
│       ├── users.controller.spec.ts # Unit tests for user controller.
│       ├── users.service.ts         # Service managing user data and business logic.
│       ├── users.service.spec.ts    # Unit tests for user service.
│       ├── /schema                  # Folder for database schema definitions.
│       │   ├── user.schema.ts       # Schema definition for users.
│       ├── /dto                     # Folder for DTOs related to users.
│       │   ├── create-user.dto.ts   # DTO for creating new users.
│       │   ├── update-user.dto.ts   # DTO for updating user information.
├── /utils                            # Folder for utility functions and helpers used throughout the application.
├── /server.ts                        # Entry point of the application where the server is initialized and started.
